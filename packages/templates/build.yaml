{{- define "community.build" }}

env:
{{- if .Values.labels }}
- JOBS={{ ( index .Values.labels "emerge.jobs" ) | default "3" }}
{{- else }}
- JOBS=3
{{- end }}
- EMERGE_DEFAULT_OPTS="--getbinpkg --quiet"
- FEATURES="-sandbox -usersandbox -ipc-sandbox -pid-sandbox -network-sandbox binpkg-request-signature"

requires:
{{- range .Values.build_requires }}
- category: {{ .category }}
  name: {{ .name }}
  version: ">=0"
{{- end }}

{{- if .Values.requires_final_images }}
requires_final_images: {{ .Values.requires_final_images }}
{{- end }}

{{- if .Values.unpack }}
unpack: {{ .Values.unpack }}
{{- end }}

prelude:
{{- $packages_list := include "community.list_packages_with_deps" .Values }}
- echo "Packages:" {{ $packages_list }}
{{- $packages := include "community.map_packages_with_deps" .Values | fromJson }}

{{/* debug */}}
{{/* depends on which comes first out of the below debug functions, only the first one will be executed */}}
{{/*- if eq .Values.name "kaffeine-tde" }}
  {{- template "community.dump" ( include "community.merge_shell_commands" ( include "community.prereqs" ( list .Values $packages "" ) ) ) }}
  {{- template "community.dumpList" ( include "community.prereqs" ( list .Values $packages "" ) ) }}
  {{- include "community.dumpJson" ( get ( ( printf "debug:\n %s" ( include "community.prereqs" ( list .Values $packages "" ) ) ) | fromYaml ) "debug" ) }}
{{- end */}}
{{/* end debug */}}

{{- $prereqs := include "community.prereqs" ( list .Values $packages "" ) }}
- |
{{ ( include "community.merge_shell_commands" $prereqs ) | indent 2 }}

{{- if eq .Values.category "layerbase" }}
- |
  rm -rf /etc/portage/package.accept_keywords || true; \
  rm -rf /etc/portage/package.license || true; \
  rm -rf /etc/portage/package.unmask || true; \
  rm -rf /etc/portage/package.use || true;
{{- else }}
  {{/* debug */}}
  {{/*- depends on which comes first out of the below debug functions, only the first one will be executed */}}
  {{/*- if eq .Values.name "blender" }}
    {{- template "community.dumpList" ( include "community.package_setup" .Values ) }}
    {{- include "community.dumpJson" ( get ( ( printf "debug:\n %s" ( include "community.package_setup" .Values ) ) | fromYaml ) "debug" ) }}
    {{- end */}}
  {{/* end debug */}}

  {{- include "community.package_setup" .Values }}
{{- end }}

steps:
{{- include "community.emerge_atom" ( list .Values $packages "" true ) }}

{{- include "community.includes_excludes" ( list .Values .Values.category ) }}

{{- include "community.subpackages" .Values }}

{{/* debug */}}
{{/*- if eq .Values.name "fonttools" }}
{{- include "community.dump" ( printf "debug:\n%s\nend debug" ( include "community.subpackages" .Values ) ) }}
{{- end */}}
{{/* end debug */}}

{{- end }}
